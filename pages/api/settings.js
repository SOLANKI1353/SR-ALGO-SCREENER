const prisma = require('../../lib/prisma'); export default async function handler(req,res){ try{ if(req.method==='GET'){ const rec = await prisma.apiKey.findFirst({where:{name:'angel'}}); return res.json({ok:true, hasKey: !!rec}); } if(req.method==='POST'){ const {key, client} = req.body; const existing = await prisma.apiKey.findFirst({where:{name:'angel'}}); if(existing) await prisma.apiKey.update({where:{id:existing.id}, data:{key, secret: client}}); else await prisma.apiKey.create({data:{name:'angel', key, secret: client}}); return res.json({ok:true}); } if(req.method==='DELETE'){ await prisma.apiKey.deleteMany({where:{name:'angel'}}); return res.json({ok:true}); } res.setHeader('Allow',['GET','POST','DELETE']); res.status(405).end(); } catch(e){ console.error(e); res.status(500).json({ok:false, error: e.message}); } }
