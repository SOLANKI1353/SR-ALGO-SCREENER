const bcrypt = require('bcryptjs'); const jwt = require('jsonwebtoken'); const prisma = require('../../../lib/prisma');
export default async function handler(req,res){ try{ if(req.method!=='POST') return res.status(405).end(); const {email,password}=req.body; const user = await prisma.user.findUnique({where:{email}}); if(!user) return res.status(400).json({ok:false,error:'No user'}); const ok = await bcrypt.compare(password, user.password); if(!ok) return res.status(400).json({ok:false,error:'Invalid'}); const token = jwt.sign({userId:user.id}, process.env.JWT_SECRET||'dev', {expiresIn:'7d'}); return res.json({ok:true, token}); } catch(e){ console.error(e); res.status(500).json({ok:false,error:e.message}); } }
